{"version":3,"sources":["Components/header/header.tsx","Components/analog-clock/digits-sections/digits.tsx","Components/analog-clock/dropDown/options/option.tsx","context.tsx","Components/analog-clock/dropDown/dropDown.tsx","assets/sprite.svg","Components/analog-clock/radioChoise/inputs/input.tsx","Components/analog-clock/radioChoise/radioChoise.tsx","Components/analog-clock/analog-clock.tsx","Components/digital-clock/arrow/arrow.tsx","Components/digital-clock/digital-clock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","DigitsSection","value","name","OprionForDropDown","zone","Context","React","createContext","changeTime","time","console","warn","changeZoneTime","zoneTime","DropDown","useContext","momentTZ","tz","names","onChange","event","select","target","selectedIndex","options","map","params","index","Inputs","forLabel","forId","text","id","check","htmlFor","type","checked","href","sprite","RadioChoise","useState","radio","setRadio","change","action","format","ClockAnalog","hours","moment","minutes","seconds","setTime","useEffect","timerID","setInterval","tick","clearInterval","Provider","info","Arrow","nameMain","nameSecondary","rotate","style","transform","ClockDigital","day","Date","getHours","getMinutes","getSeconds","hour","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d5b1f27.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\n\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <h1 className='header'>Time</h1>\r\n    );\r\n  }","import React from 'react';\r\nimport './style.css';\r\nimport {IDigitsProps} from '../../../Models/analogTime';\r\n\r\n\r\n\r\nexport default function DigitsSection ({value, name} : IDigitsProps) {\r\n    return (\r\n        <div className='digits__wrapper'>\r\n            <span className='digits__section'>{value}</span>\r\n            <span className='digits__section'>{name}</span>\r\n        </div>\r\n    );\r\n  }","import React from 'react';\r\nimport {IOprionProps} from '../../../../Models/analogTime';\r\n\r\n\r\nexport default function OprionForDropDown({zone}:IOprionProps) {\r\n    return (\r\n        <option value={zone}>{zone}</option>\r\n    )\r\n}","import React from 'react';\r\nimport ChangeContext from './Models/contextType'\r\n\r\n\r\n\r\nconst Context = React.createContext<ChangeContext>({changeTime: time => console.warn('default'), changeZoneTime: zoneTime => console.warn('default')});\r\n\r\nexport default Context;","import React, { ChangeEvent, useContext } from 'react';\r\nimport './style.css';\r\nimport OprionForDropDown from \"./options/option\";\r\nimport Context from '../../../context';\r\nimport ChangeContext from '../../../Models/contextType';\r\nimport momentTZ from 'moment-timezone';\r\n\r\nexport default function DropDown() {\r\n    \r\n    const {changeZoneTime} = useContext<ChangeContext>(Context);\r\n    \r\n    const zone = momentTZ.tz.names();\r\n\r\n    const changeZone = (event: ChangeEvent<HTMLSelectElement>) =>{\r\n        const select = event.target.selectedIndex;\r\n        const options = event.target.options;\r\n        changeZoneTime(options[select].value)\r\n    }\r\n\r\n    return (\r\n        <p className=\"date__time-wrapper-drop\">\r\n            <select className=\"towns\" onChange={changeZone}>\r\n                {zone.map((params:any ,index:number)=> <OprionForDropDown key={index} zone={params}/>)}\r\n            </select>\r\n        </p>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/sprite.82788422.svg\";","import React from 'react';\r\nimport sprite from \"../../../../assets/sprite.svg\";\r\nimport { IInputProps } from \"../../../../Models/analogTime\";\r\n\r\n\r\nexport default function Inputs( { forLabel, forId, name, text, id, check, onChange} : IInputProps) {\r\n    return (  \r\n        <label htmlFor={forLabel}>\r\n            {text}\r\n        <input type=\"radio\" name={name} id={forId} onChange={()=> onChange(id, forId)} checked={check}/>\r\n        <svg>\r\n            <use href={sprite + \"#off\"}></use>\r\n        </svg>\r\n        </label>\r\n        )\r\n}","import React, { useContext, useState } from 'react';\r\nimport './style.css';\r\nimport Inputs from './inputs/input';\r\nimport Context from '../../../context';\r\nimport ChangeContext from '../../../Models/contextType';\r\n\r\n\r\n\r\nexport default function RadioChoise() {\r\n    const {changeTime} = useContext<ChangeContext>(Context);\r\n\r\n    const [ radio , setRadio ] = useState([\r\n        {id : 1, forLabel :'24', forId : '24' , name: 'choise' , text: '24-hour clock', check : true},\r\n        {id : 2, forLabel : '12', forId : '12', name: 'choise' ,  text: '12-hour clock', check : false},\r\n    ]);\r\n\r\n    const change = (id:number, value : string) => {\r\n        setRadio( radio.map(radio => {\r\n            if (radio.id === id) radio.check = !radio.check\r\n            else radio.check = !radio.check\r\n            return radio;\r\n        }));\r\n        changeTime(value);\r\n    }\r\n\r\n    return (\r\n        <form action=\"\" className=\"radioChose\">\r\n            {radio.map(( params:any) => {\r\n                return <Inputs key={params.id} {...params} onChange={change}/>\r\n                })}\r\n      </form>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './styles.css';\r\nimport DigitsSection from './digits-sections/digits';\r\nimport DropDown from \"./dropDown/dropDown\";\r\nimport {IAnalogTime} from '../../Models/analogTime';\r\nimport RadioChoise from './radioChoise/radioChoise';\r\nimport Context from '../../context';\r\nimport moment from 'moment';\r\n\r\nlet format : string = 'HH';\r\nlet zone: string = 'Europe/Kiev';\r\n\r\n\r\n\r\nexport default function ClockAnalog() {\r\n  const hours = moment.tz(zone).format(format);\r\n  const minutes = moment.tz(zone).format('mm');\r\n  const seconds = moment.tz(zone).format('ss');\r\n  \r\n  \r\n  const [ time , setTime ] = useState<IAnalogTime[]>([\r\n        {id : 1, value : hours, name : 'Hours' },\r\n        {id : 2, value : minutes, name : 'Minutes' },\r\n        {id : 3, value : seconds, name : 'Seconds' },\r\n      ]);\r\n      \r\n    useEffect(() => {\r\n      const timerID = setInterval( () => tick(), 1000 );\r\n      \r\n      return function cleanup() {\r\n        clearInterval(timerID);\r\n      };\r\n    });\r\n    \r\n    const tick = () => {      \r\n      setTime([\r\n        {id : 1, value : hours, name : 'Hours' },\r\n        {id : 2, value : minutes, name : 'Minutes' },\r\n        {id : 3, value : seconds, name : 'Seconds' },\r\n      ]);\r\n    }\r\n\r\n    const changeTime = (value :string) => {\r\n      if (value === '12'){\r\n        format = 'hh';\r\n        };\r\n      if (value === '24'){\r\n        format = 'HH';\r\n        };\r\n    }\r\n\r\n    const changeZoneTime = (value : string) => { \r\n      zone = value;\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{changeTime : changeTime, changeZoneTime : changeZoneTime}}>\r\n        <div className='date__time-wrapper'>\r\n            <div className='date__time-wrapper-time'>\r\n                {time.map(( info: IAnalogTime) => {\r\n                    return <DigitsSection key={info.id} {...info}/>\r\n                    })}\r\n            </div>\r\n            <DropDown/>\r\n            <RadioChoise/>\r\n        </div>\r\n      </Context.Provider>\r\n    );\r\n  }","import React from 'react';\r\nimport { IDigitalArrow } from \"../../../Models/digitalTime\";\r\n\r\nexport default function Arrow({nameMain , nameSecondary, value} : IDigitalArrow) {    \r\n\r\n    const rotate = `rotateZ(${value}deg)`;\r\n\r\n    return (\r\n            <div className={nameMain}>\r\n                <div className={nameSecondary}  style={{transform: rotate}}></div>\r\n            </div>\r\n    );\r\n  }","import React, { useEffect, useState } from 'react';\r\nimport {IDigitalTime} from '../../Models/digitalTime';\r\nimport Arrow from './arrow/arrow';\r\nimport './styles.css';\r\n\r\n\r\nexport default function ClockDigital() {\r\n  \r\n  const deg = 6;\r\n  const day = new Date();\r\n\r\n  const [ time , setTime ] = useState<IDigitalTime[]>([\r\n        {id : 1, value : (((day.getHours() * 30) + (day.getMinutes() * deg / 12) )), nameMain : 'hours', nameSecondary : 'hr' },\r\n        {id : 2, value : (day.getMinutes() * deg) , nameMain : 'minuts', nameSecondary : 'mn'},\r\n        {id : 3, value : (day.getSeconds() * deg) , nameMain : 'seconds', nameSecondary : 'sec'},\r\n      ]);\r\n      \r\n      useEffect(() => {\r\n        const timerID = setInterval( () => tick(), 1000 );\r\n      \r\n        return function cleanup() {\r\n            clearInterval(timerID);\r\n          };\r\n       });\r\n       \r\n    const tick = () => {\r\n        const hour = day.getHours() * 30;\r\n        const minutes = day.getMinutes() * deg;\r\n        const seconds = day.getSeconds() * deg;\r\n        const shiftHour = hour + (minutes / 12);\r\n       \r\n        setTime([\r\n          {id : 1, value : shiftHour,  nameMain : 'hours', nameSecondary : 'hr' },\r\n          {id : 2, value : minutes,  nameMain : 'minuts', nameSecondary : 'mn' },\r\n          {id : 3, value : seconds,  nameMain : 'seconds', nameSecondary : 'sec' },\r\n        ]);\r\n       }\r\n    \r\n    return (\r\n        <div className='clock'>\r\n            {time.map(( info: IDigitalTime)  =>{\r\n                    return <Arrow key={info.id} {...info}/>\r\n                    })}\r\n        </div>\r\n    );\r\n  }","import React from 'react';\nimport './App.css';\nimport Header from './Components/header/header'\nimport ClockAnalog from \"./Components/analog-clock/analog-clock\";\nimport ClockDigital from \"./Components/digital-clock/digital-clock\";\n\n\nexport const App:React.FC = () => {\n  return (\n    <div className='wrapper'>\n      <Header/>\n      <div className='wrapper__clock'>\n        <ClockAnalog/>\n        <ClockDigital/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n  google: {\n    families: [\"Orbitron:400;500;700\"],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}