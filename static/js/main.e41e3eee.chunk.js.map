{"version":3,"sources":["Components/header/header.tsx","Components/analog-clock/digits-sections/digits.tsx","Components/analog-clock/dropDown/options/option.tsx","context.tsx","Components/analog-clock/dropDown/dropDown.tsx","assets/sprite.svg","Components/analog-clock/radioChoise/inputs/input.tsx","Components/analog-clock/radioChoise/radioChoise.tsx","Components/analog-clock/analog-clock.tsx","Components/digital-clock/arrow/arrow.tsx","Components/digital-clock/digital-clock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","DigitsSection","value","name","OprionForDropDown","zone","Context","React","createContext","changeTime","time","console","warn","changeZoneTime","zoneTime","DropDown","useContext","momentTZ","tz","names","changeZone","useCallback","event","select","target","selectedIndex","options","onChange","map","params","index","Inputs","forLabel","forId","text","id","check","htmlFor","type","bind","checked","href","sprite","RadioChoise","useState","radio","setRadio","change","action","ClockAnalog","format","useRef","hours","moment","current","minutes","seconds","setTime","useEffect","timerID","setInterval","tick","clearInterval","Provider","info","Arrow","nameMain","nameSecondary","rotate","style","transform","day","Date","ClockDigital","getHours","getMinutes","getSeconds","hour","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e41e3eee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\n\r\nexport const Header:React.FC = () => {\r\n    return (\r\n        <h1 className='header'>Time</h1>\r\n    );\r\n}","import React from 'react';\r\nimport './style.css';\r\nimport {IDigitsProps} from '../../../Models/analogTime';\r\n\r\n\r\n\r\nexport const DigitsSection: React.FC<IDigitsProps> =  ({value, name}) =>{\r\n    return (\r\n        <div className='digits__wrapper'>\r\n            <span className='digits__section'>{value}</span>\r\n            <span className='digits__section'>{name}</span>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {IOprionProps} from '../../../../Models/analogTime';\r\n\r\n\r\nexport const OprionForDropDown: React.FC<IOprionProps> = ({ zone }) => {\r\n    return (\r\n        <option value={zone}>{zone}</option>\r\n    )\r\n}","import React from 'react';\r\nimport ChangeContext from './Models/contextType'\r\n\r\n\r\n\r\nconst Context = React.createContext<ChangeContext>({changeTime: time => console.warn('default'), changeZoneTime: zoneTime => console.warn('default')});\r\n\r\nexport default Context;","import React, { ChangeEvent, useCallback, useContext } from 'react';\r\nimport './style.css';\r\nimport { OprionForDropDown } from \"./options/option\";\r\nimport Context from '../../../context';\r\nimport ChangeContext from '../../../Models/contextType';\r\nimport momentTZ from 'moment-timezone';\r\n\r\nexport const DropDown: React.FC = () => {\r\n    \r\n    const {changeZoneTime} = useContext<ChangeContext>(Context);\r\n    \r\n    const zone = momentTZ.tz.names();\r\n\r\n    const changeZone = useCallback((event: ChangeEvent<HTMLSelectElement>) =>{\r\n        const select = event.target.selectedIndex;\r\n        const options = event.target.options;\r\n        changeZoneTime(options[select].value)\r\n    },[changeZoneTime]);\r\n\r\n    return (\r\n        <p className=\"date__time-wrapper-drop\">\r\n            <select className=\"towns\" onChange={changeZone}>\r\n                {zone.map((params: string ,index: number)=> <OprionForDropDown key={index} zone={params}/>)}\r\n            </select>\r\n        </p>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/sprite.82788422.svg\";","import React from 'react';\r\nimport sprite from \"../../../../assets/sprite.svg\";\r\nimport { IInputProps } from \"../../../../Models/analogTime\";\r\n\r\n\r\nexport const Inputs: React.FC<IInputProps> = ({ forLabel, forId, name, text, id, check, onChange}) => {\r\n    return (  \r\n    <label htmlFor={forLabel}>\r\n        {text}\r\n        <input type=\"radio\" name={name} id={forId} onChange={onChange.bind(null, id, forId)} checked={check}/>\r\n        <svg>\r\n            <use href={sprite + \"#off\"}></use>\r\n        </svg>\r\n    </label>\r\n    )\r\n}","import React, { useContext, useState } from 'react';\r\nimport './style.css';\r\nimport {Inputs} from './inputs/input';\r\nimport Context from '../../../context';\r\nimport ChangeContext from '../../../Models/contextType';\r\n\r\n\r\n\r\nexport const RadioChoise: React.FC = () => {\r\n    const {changeTime} = useContext<ChangeContext>(Context);\r\n\r\n    const [ radio , setRadio ] = useState([\r\n        {id : 1, forLabel :'24', forId : '24' , name: 'choise' , text: '24-hour clock', check : true},\r\n        {id : 2, forLabel : '12', forId : '12', name: 'choise' ,  text: '12-hour clock', check : false},\r\n    ]);\r\n\r\n    const change = (id:number, value : string) => {\r\n        setRadio( radio.map(radio => {\r\n            if (radio.id === id) radio.check = !radio.check\r\n            else radio.check = !radio.check\r\n            return radio;\r\n        }));\r\n        changeTime(value);\r\n    }\r\n\r\n    return (\r\n        <form action=\"\" className=\"radioChose\">\r\n            {radio.map(( params ) => {\r\n                return <Inputs key={params.id} {...params} onChange={change}/>\r\n                })}\r\n        </form>\r\n    )\r\n}","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport './styles.css';\r\nimport { DigitsSection } from './digits-sections/digits';\r\nimport { DropDown } from \"./dropDown/dropDown\";\r\nimport { IAnalogTime } from '../../Models/analogTime';\r\nimport { RadioChoise } from './radioChoise/radioChoise';\r\nimport Context from '../../context';\r\nimport moment from 'moment';\r\n\r\n\r\nexport const ClockAnalog: React.FC = () => {\r\n  const format = useRef<string>('HH');\r\n  const zone = useRef<string>('Europe/Kiev');\r\n\r\n  const hours = moment.tz(zone.current).format(format.current);\r\n  const minutes = moment.tz(zone.current).format('mm');\r\n  const seconds = moment.tz(zone.current).format('ss');\r\n  \r\n  const [ time , setTime ] = useState<IAnalogTime[]>([\r\n        {id : 1, value : hours, name : 'Hours' },\r\n        {id : 2, value : minutes, name : 'Minutes' },\r\n        {id : 3, value : seconds, name : 'Seconds' },\r\n      ]);\r\n\r\n\r\n  useEffect(() => {\r\n    const timerID = setInterval( () => tick(), 1000 );\r\n    \r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n  \r\n  const tick = useCallback(() => {      \r\n    setTime([\r\n      {id : 1, value : hours, name : 'Hours' },\r\n      {id : 2, value : minutes, name : 'Minutes' },\r\n      {id : 3, value : seconds, name : 'Seconds' },\r\n    ]);\r\n  },[hours, minutes, seconds]);\r\n  \r\n  const changeTime = useCallback((value :string) :void => {\r\n    if (value === '12'){\r\n      format.current = 'hh';\r\n    };\r\n    if (value === '24'){\r\n      format.current = 'HH';\r\n    };\r\n  },[]);\r\n  \r\n  const changeZoneTime = useCallback((value : string) :void => { \r\n    zone.current = value;\r\n  }, []);\r\n  \r\n  return (\r\n  <Context.Provider value={{changeTime : changeTime, changeZoneTime : changeZoneTime}}>\r\n    <div className='date__time-wrapper'>\r\n      <div className='date__time-wrapper-time'>\r\n        {time.map(( info: IAnalogTime) => <DigitsSection key={info.id} {...info}/>)}\r\n      </div>\r\n      <DropDown/>\r\n      <RadioChoise/>\r\n    </div>\r\n  </Context.Provider>\r\n  );\r\n}","import React from 'react';\r\nimport { IDigitalArrow } from \"../../../Models/digitalTime\";\r\n\r\nexport const Arrow: React.FC<IDigitalArrow> = ({nameMain , nameSecondary, value}) => {    \r\n    \r\n    const rotate = `rotateZ(${value}deg)`;\r\n\r\n    return (\r\n    <div className={nameMain}>\r\n        <div className={nameSecondary}  style={{transform: rotate}}></div>\r\n    </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport {IDigitalTime} from '../../Models/digitalTime';\r\nimport { Arrow } from './arrow/arrow';\r\nimport './styles.css';\r\n\r\n\r\nconst deg = 6;\r\nconst day = new Date();\r\n\r\nexport const ClockDigital: React.FC = () => {\r\n  \r\n  const [ time , setTime ] = useState<IDigitalTime[]>([\r\n    {id : 1, value : (((day.getHours() * 30) + (day.getMinutes() * deg / 12) )), nameMain : 'hours', nameSecondary : 'hr' },\r\n    {id : 2, value : (day.getMinutes() * deg) , nameMain : 'minuts', nameSecondary : 'mn'},\r\n    {id : 3, value : (day.getSeconds() * deg) , nameMain : 'seconds', nameSecondary : 'sec'},\r\n  ]);\r\n  \r\n  useEffect(() => {\r\n    const timerID = setInterval( () => tick(), 1000 );\r\n    \r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n  \r\n  const tick = useCallback(() => {\r\n    const hour = day.getHours() * 30;\r\n    const minutes = day.getMinutes() * deg;\r\n    const seconds = day.getSeconds() * deg;\r\n    const shiftHour = hour + (minutes / 12);\r\n    \r\n    setTime([\r\n      {id : 1, value : shiftHour,  nameMain : 'hours', nameSecondary : 'hr' },\r\n      {id : 2, value : minutes,  nameMain : 'minuts', nameSecondary : 'mn' },\r\n      {id : 3, value : seconds,  nameMain : 'seconds', nameSecondary : 'sec' },\r\n    ]);\r\n  }, []);\r\n  \r\n  return (\r\n  <div className='clock'>\r\n    {time.map(( info: IDigitalTime) => <Arrow key={info.id} {...info}/>)}\r\n  </div>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport { Header } from './Components/header/header'\nimport { ClockAnalog } from \"./Components/analog-clock/analog-clock\";\nimport { ClockDigital } from \"./Components/digital-clock/digital-clock\";\n\n\nexport const App:React.FC = () => {\n  return (\n    <div className='wrapper'>\n      <Header/>\n      <div className='wrapper__clock'>\n        <ClockAnalog/>\n        <ClockDigital/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n  google: {\n    families: [\"Orbitron:400;500;700\"],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}